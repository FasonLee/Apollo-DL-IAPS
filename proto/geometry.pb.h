// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geometry.proto

#ifndef PROTOBUF_INCLUDED_geometry_2eproto
#define PROTOBUF_INCLUDED_geometry_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_geometry_2eproto 

namespace protobuf_geometry_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_geometry_2eproto
namespace apollo {
namespace common {
class Point2D;
class Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class PointENU;
class PointENUDefaultTypeInternal;
extern PointENUDefaultTypeInternal _PointENU_default_instance_;
class PointLLH;
class PointLLHDefaultTypeInternal;
extern PointLLHDefaultTypeInternal _PointLLH_default_instance_;
class Polygon;
class PolygonDefaultTypeInternal;
extern PolygonDefaultTypeInternal _Polygon_default_instance_;
class Quaternion;
class QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
}  // namespace common
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::common::Point2D* Arena::CreateMaybeMessage<::apollo::common::Point2D>(Arena*);
template<> ::apollo::common::Point3D* Arena::CreateMaybeMessage<::apollo::common::Point3D>(Arena*);
template<> ::apollo::common::PointENU* Arena::CreateMaybeMessage<::apollo::common::PointENU>(Arena*);
template<> ::apollo::common::PointLLH* Arena::CreateMaybeMessage<::apollo::common::PointLLH>(Arena*);
template<> ::apollo::common::Polygon* Arena::CreateMaybeMessage<::apollo::common::Polygon>(Arena*);
template<> ::apollo::common::Quaternion* Arena::CreateMaybeMessage<::apollo::common::Quaternion>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace common {

// ===================================================================

class PointENU : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.PointENU) */ {
 public:
  PointENU();
  virtual ~PointENU();

  PointENU(const PointENU& from);

  inline PointENU& operator=(const PointENU& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointENU(PointENU&& from) noexcept
    : PointENU() {
    *this = ::std::move(from);
  }

  inline PointENU& operator=(PointENU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointENU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointENU* internal_default_instance() {
    return reinterpret_cast<const PointENU*>(
               &_PointENU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PointENU* other);
  friend void swap(PointENU& a, PointENU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointENU* New() const final {
    return CreateMaybeMessage<PointENU>(NULL);
  }

  PointENU* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointENU>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointENU& from);
  void MergeFrom(const PointENU& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointENU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double z = 3 [default = 0];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.PointENU)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double z_;
  double x_;
  double y_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PointLLH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.PointLLH) */ {
 public:
  PointLLH();
  virtual ~PointLLH();

  PointLLH(const PointLLH& from);

  inline PointLLH& operator=(const PointLLH& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointLLH(PointLLH&& from) noexcept
    : PointLLH() {
    *this = ::std::move(from);
  }

  inline PointLLH& operator=(PointLLH&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointLLH& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointLLH* internal_default_instance() {
    return reinterpret_cast<const PointLLH*>(
               &_PointLLH_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PointLLH* other);
  friend void swap(PointLLH& a, PointLLH& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointLLH* New() const final {
    return CreateMaybeMessage<PointLLH>(NULL);
  }

  PointLLH* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointLLH>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointLLH& from);
  void MergeFrom(const PointLLH& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointLLH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double height = 3 [default = 0];
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  double height() const;
  void set_height(double value);

  // optional double lon = 1 [default = nan];
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 1;
  double lon() const;
  void set_lon(double value);

  // optional double lat = 2 [default = nan];
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 2;
  double lat() const;
  void set_lat(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.PointLLH)
 private:
  void set_has_lon();
  void clear_has_lon();
  void set_has_lat();
  void clear_has_lat();
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double height_;
  double lon_;
  double lat_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Point2D) */ {
 public:
  Point2D();
  virtual ~Point2D();

  Point2D(const Point2D& from);

  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2D(Point2D&& from) noexcept
    : Point2D() {
    *this = ::std::move(from);
  }

  inline Point2D& operator=(Point2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point2D* internal_default_instance() {
    return reinterpret_cast<const Point2D*>(
               &_Point2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Point2D* other);
  friend void swap(Point2D& a, Point2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2D* New() const final {
    return CreateMaybeMessage<Point2D>(NULL);
  }

  Point2D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point2D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point2D& from);
  void MergeFrom(const Point2D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Point2D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double x_;
  double y_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3D(Point3D&& from) noexcept
    : Point3D() {
    *this = ::std::move(from);
  }

  inline Point3D& operator=(Point3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Point3D* other);
  friend void swap(Point3D& a, Point3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3D* New() const final {
    return CreateMaybeMessage<Point3D>(NULL);
  }

  Point3D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3 [default = nan];
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Point3D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double x_;
  double y_;
  double z_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quaternion(Quaternion&& from) noexcept
    : Quaternion() {
    *this = ::std::move(from);
  }

  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
               &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Quaternion* other);
  friend void swap(Quaternion& a, Quaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quaternion* New() const final {
    return CreateMaybeMessage<Quaternion>(NULL);
  }

  Quaternion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quaternion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double qx = 1 [default = nan];
  bool has_qx() const;
  void clear_qx();
  static const int kQxFieldNumber = 1;
  double qx() const;
  void set_qx(double value);

  // optional double qy = 2 [default = nan];
  bool has_qy() const;
  void clear_qy();
  static const int kQyFieldNumber = 2;
  double qy() const;
  void set_qy(double value);

  // optional double qz = 3 [default = nan];
  bool has_qz() const;
  void clear_qz();
  static const int kQzFieldNumber = 3;
  double qz() const;
  void set_qz(double value);

  // optional double qw = 4 [default = nan];
  bool has_qw() const;
  void clear_qw();
  static const int kQwFieldNumber = 4;
  double qw() const;
  void set_qw(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Quaternion)
 private:
  void set_has_qx();
  void clear_has_qx();
  void set_has_qy();
  void clear_has_qy();
  void set_has_qz();
  void clear_has_qz();
  void set_has_qw();
  void clear_has_qw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Polygon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Polygon) */ {
 public:
  Polygon();
  virtual ~Polygon();

  Polygon(const Polygon& from);

  inline Polygon& operator=(const Polygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Polygon(Polygon&& from) noexcept
    : Polygon() {
    *this = ::std::move(from);
  }

  inline Polygon& operator=(Polygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Polygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Polygon* internal_default_instance() {
    return reinterpret_cast<const Polygon*>(
               &_Polygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Polygon* other);
  friend void swap(Polygon& a, Polygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Polygon* New() const final {
    return CreateMaybeMessage<Polygon>(NULL);
  }

  Polygon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Polygon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Polygon& from);
  void MergeFrom(const Polygon& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Polygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.common.Point3D point = 1;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  ::apollo::common::Point3D* mutable_point(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >*
      mutable_point();
  const ::apollo::common::Point3D& point(int index) const;
  ::apollo::common::Point3D* add_point();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >&
      point() const;

  // @@protoc_insertion_point(class_scope:apollo.common.Polygon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D > point_;
  friend struct ::protobuf_geometry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PointENU

// optional double x = 1 [default = nan];
inline bool PointENU::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointENU::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointENU::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointENU::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double PointENU::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.x)
  return x_;
}
inline void PointENU::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.x)
}

// optional double y = 2 [default = nan];
inline bool PointENU::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointENU::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointENU::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointENU::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double PointENU::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.y)
  return y_;
}
inline void PointENU::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.y)
}

// optional double z = 3 [default = 0];
inline bool PointENU::has_z() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointENU::set_has_z() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointENU::clear_has_z() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointENU::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double PointENU::z() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.z)
  return z_;
}
inline void PointENU::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.z)
}

// -------------------------------------------------------------------

// PointLLH

// optional double lon = 1 [default = nan];
inline bool PointLLH::has_lon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointLLH::set_has_lon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointLLH::clear_has_lon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointLLH::clear_lon() {
  lon_ = ::google::protobuf::internal::NaN();
  clear_has_lon();
}
inline double PointLLH::lon() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.lon)
  return lon_;
}
inline void PointLLH::set_lon(double value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.lon)
}

// optional double lat = 2 [default = nan];
inline bool PointLLH::has_lat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointLLH::set_has_lat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointLLH::clear_has_lat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointLLH::clear_lat() {
  lat_ = ::google::protobuf::internal::NaN();
  clear_has_lat();
}
inline double PointLLH::lat() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.lat)
  return lat_;
}
inline void PointLLH::set_lat(double value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.lat)
}

// optional double height = 3 [default = 0];
inline bool PointLLH::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointLLH::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointLLH::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointLLH::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double PointLLH::height() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.height)
  return height_;
}
inline void PointLLH::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.height)
}

// -------------------------------------------------------------------

// Point2D

// optional double x = 1 [default = nan];
inline bool Point2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point2D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point2D.x)
  return x_;
}
inline void Point2D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point2D.x)
}

// optional double y = 2 [default = nan];
inline bool Point2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point2D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point2D.y)
  return y_;
}
inline void Point2D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point2D.y)
}

// -------------------------------------------------------------------

// Point3D

// optional double x = 1 [default = nan];
inline bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point3D::clear_x() {
  x_ = ::google::protobuf::internal::NaN();
  clear_has_x();
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.x)
}

// optional double y = 2 [default = nan];
inline bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point3D::clear_y() {
  y_ = ::google::protobuf::internal::NaN();
  clear_has_y();
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.y)
}

// optional double z = 3 [default = nan];
inline bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Point3D::clear_z() {
  z_ = ::google::protobuf::internal::NaN();
  clear_has_z();
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.z)
}

// -------------------------------------------------------------------

// Quaternion

// optional double qx = 1 [default = nan];
inline bool Quaternion::has_qx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quaternion::set_has_qx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quaternion::clear_has_qx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quaternion::clear_qx() {
  qx_ = ::google::protobuf::internal::NaN();
  clear_has_qx();
}
inline double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qx)
  return qx_;
}
inline void Quaternion::set_qx(double value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qx)
}

// optional double qy = 2 [default = nan];
inline bool Quaternion::has_qy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quaternion::set_has_qy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quaternion::clear_has_qy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quaternion::clear_qy() {
  qy_ = ::google::protobuf::internal::NaN();
  clear_has_qy();
}
inline double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qy)
  return qy_;
}
inline void Quaternion::set_qy(double value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qy)
}

// optional double qz = 3 [default = nan];
inline bool Quaternion::has_qz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quaternion::set_has_qz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quaternion::clear_has_qz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quaternion::clear_qz() {
  qz_ = ::google::protobuf::internal::NaN();
  clear_has_qz();
}
inline double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qz)
  return qz_;
}
inline void Quaternion::set_qz(double value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qz)
}

// optional double qw = 4 [default = nan];
inline bool Quaternion::has_qw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quaternion::set_has_qw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quaternion::clear_has_qw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quaternion::clear_qw() {
  qw_ = ::google::protobuf::internal::NaN();
  clear_has_qw();
}
inline double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qw)
  return qw_;
}
inline void Quaternion::set_qw(double value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qw)
}

// -------------------------------------------------------------------

// Polygon

// repeated .apollo.common.Point3D point = 1;
inline int Polygon::point_size() const {
  return point_.size();
}
inline void Polygon::clear_point() {
  point_.Clear();
}
inline ::apollo::common::Point3D* Polygon::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.Polygon.point)
  return point_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >*
Polygon::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.Polygon.point)
  return &point_;
}
inline const ::apollo::common::Point3D& Polygon::point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.Polygon.point)
  return point_.Get(index);
}
inline ::apollo::common::Point3D* Polygon::add_point() {
  // @@protoc_insertion_point(field_add:apollo.common.Polygon.point)
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >&
Polygon::point() const {
  // @@protoc_insertion_point(field_list:apollo.common.Polygon.point)
  return point_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_geometry_2eproto
